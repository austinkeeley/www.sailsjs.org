<h1 id="-validate-callback-">* .validate(<code>callback</code>)</h1>
<h3 id="purpose" permalink="purpose">Purpose</h3>
<p>Checks the current keys/values on the record against the validations specified in the attributes object of your model. </p>
<h3 id="overview" permalink="overview">Overview</h3>
<h4 id="parameters" permalink="parameters">Parameters</h4>
<table>
<thead>
<tr>
<th></th>
<th>Description</th>
<th>Accepted Data Types</th>
<th>Required ?</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>Callback</td>
<td><code>function</code></td>
<td>Yes</td>
</tr>
</tbody>
</table>
<h4 id="callback-parameters" permalink="callback-parameters">Callback Parameters</h4>
<table>
<thead>
<tr>
<th></th>
<th>Description</th>
<th>Possible Data Types</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>Error</td>
<td><code>Error</code></td>
</tr>
</tbody>
</table>
<h3 id="example-usage" permalink="example-usage">Example Usage</h3>
<pre><code data-language="javascript">User.find().exec(
  function(err,myRecords){

    // Grab a record off the top, change it to the wrong data type, then try to validate
    var getOneRecord = myRecords.pop();
    getOneRecord.name = [&apos;Marie&apos;,&apos;Hank&apos;];
    getOneRecord.name.validate(
      function(err){
        if (err)
          console.log(JSON.stringify(err));
      });
  });

// {&quot;ValidationError&quot;:{&quot;name&quot;:[{&quot;data&quot;:[&quot;Marie&quot;,&quot;Hank&quot;],&quot;message&quot;:&quot;Validation error: \&quot;Marie,Hank\&quot; is not of type \&quot;string\&quot;&quot;,&quot;rule&quot;:&quot;string&quot;}]}}
</code></pre><!-- __LANG=%%__ -->
<p>For model</p>
<pre><code data-language="javascript">module.exports = {

  attributes: {
    name: &apos;string&apos;

  }

};
</code></pre><!-- __LANG=%%__ -->
<h3 id="notes" permalink="notes">Notes</h3>
<blockquote>
<p>This is shorthand for <code>Model.validate({ attributes }, cb)</code>
If you <code>.save()</code> without first validating, Waterline tries to convert.  If it can&apos;t, it will throw an error.
In this case, it would have converted the array to the string &apos;Marie,Hank&apos;</p>
<p>There will be no parameters in the callback unless there is an error.  No news is good news.</p>
<p>This is an instance method.  Currently, instance methods ARE NOT TRANSACTIONAL.  Because of this, it is recommended that you use the equivalent model method instead.  </p>
</blockquote>
<p><docmeta name="methodType" value="instance"></docmeta></p>
<p><docmeta name="importance" value="undefined"></docmeta></p>
<docmeta name="displayName" value=".validate()">

</docmeta>