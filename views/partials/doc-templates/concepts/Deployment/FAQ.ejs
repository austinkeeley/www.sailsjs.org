<h1 id="faq">FAQ</h1>
<h5 id="can-i-use-environment-variables-" permalink="can-i-use-environment-variables">Can I use environment variables?</h5>
<p>Yes! You can also configure the <code>port</code> and <code>environment</code> settings in Sails using environment variables.
<code>NODE_ENV=production sails lift</code>
<code>PORT=443 sails lift</code></p>
<h5 id="where-do-i-put-my-production-database-credentials-other-settings-" permalink="where-do-i-put-my-production-database-credentials--other-settings">Where do I put my production database credentials?  Other settings?</h5>
<p>For your other deployment/machine-specific settings, namely any kind of credentials, you should use <code>config/local.js</code>.<br>It&apos;s included in your <code>.gitignore</code> file by default so you don&apos;t inadvertently commit your credentials to your code repository.</p>
<p><strong>config/local.js</strong></p>
<pre><code data-language="javascript">// Local configuration
// 
// Included in the .gitignore by default,
// this is where you include configuration overrides for your local system
// or for a production deployment.
//
// For example, to use port 80 on the local machine, override the `port` config
module.exports = {
    port: 80,
    environment: &apos;production&apos;,
    adapters: {
        mysql: {
            user: &apos;root&apos;,
            password: &apos;12345&apos;
        }
    }
}
</code></pre><!-- __LANG=%%__ -->
<h5 id="how-do-i-get-my-sails-app-on-the-server-" permalink="how-do-i-get-my-sails-app-on-the-server">How do I get my Sails app on the server?</h5>
<p>Is your Node.js instance already spun up?  When you have the ip address, you can go ahead and ssh onto it, then <code>sudo npm install -g forever</code> to install Sails and forever for the first time.  </p>
<p>Then <code>git clone</code> your project (or <code>scp</code> it onto the server if it&apos;s not in a git repo) into a new folder on the server and cd into it, and <code>forever start app.js</code></p>
<h3 id="performance-benchmarks" permalink="performance-benchmarks">Performance Benchmarks</h3>
<p>Performance in Sails is comparable to what you&apos;d expect from a standard Node.js/Express application.  In other words, fast!  We&apos;ve done some optimizations ourselves in Sails and Waterline, but primarily, our focus has been on not messing up what was already really fast.  Above all, we have @ry, @visionmedia, @isaacs, #v8, @joyent and the rest of the Node.js core team to thank.</p>
<ul>
<li><a href="http://serdardogruyol.com/?p=111" target="_blank">http://serdardogruyol.com/?p=111</a></li>
</ul>
<p>Issues <a href="https://github.com/balderdashy/sails/issues/3099" target="_blank">#3099</a> and <a href="https://github.com/balderdashy/sails/issues/2779" target="_blank">#2779</a> are about a memory leak. It resides in the <code>express-session</code> module used by default, which stores sessions in-memory.
To disable it, make sure that you disable sessions in the <code>.sailsrc</code>:</p>
<pre><code data-language="javascript">&quot;hooks&quot;: {
  &quot;session&quot;: false
}
</code></pre><!-- __LANG=%%__ -->
<p>You may also use an alternative (redis/mongo/cookies) to store sessions.</p>
<docmeta name="displayName" value="FAQ">

</docmeta>