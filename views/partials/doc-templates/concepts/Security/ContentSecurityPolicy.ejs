<h1 id="content-security-policy">Content Security Policy</h1>
<p>Content Security Policy (CSP) is a W3C specification for instructing the client browser as to which location and/or which type of resources are allowed to be loaded. This spec uses &quot;directives&quot; to define a loading behaviors for target resource types. Directives can be specified using HTTP response headers or or HTML Meta tags.</p>
<h4 id="http-headers" permalink="http-headers">HTTP Headers</h4>
<table>
<thead>
<tr>
<th>Header</th>
<th>Browsers</th>
</tr>
</thead>
<tbody>
<tr>
<td>Content-Security-Policy</td>
<td>(W3C Standard header) Chrome version &gt;= 25, Firefox version &gt;= 23, Opera version &gt;= 19</td>
</tr>
<tr>
<td>X-Content-Security-Policy</td>
<td>Firefox version &lt; 23, IE version 10</td>
</tr>
<tr>
<td>X-WebKit-CSP</td>
<td>Chrome version &lt; 25</td>
</tr>
</tbody>
</table>
<h4 id="supported-directives" permalink="supported-directives">Supported Directives</h4>
<table>
<thead>
<tr>
<th>Directive</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>default-src</td>
<td>Loading policy for all resources type in case a resource type dedicated directive is not defined (fallback)</td>
</tr>
<tr>
<td>script-src</td>
<td>Defines which scripts the protected resource can execute</td>
</tr>
<tr>
<td>object-src</td>
<td>Defines from where the protected resource can load plugins</td>
</tr>
<tr>
<td>style-src</td>
<td>Defines which styles (CSS) the user applies to the protected resource</td>
</tr>
<tr>
<td>img-src</td>
<td>Defines from where the protected resource can load images</td>
</tr>
<tr>
<td>media-src</td>
<td>Defines from where the protected resource can load video and audio</td>
</tr>
<tr>
<td>frame-src</td>
<td>Defines from where the protected resource can embed frames</td>
</tr>
<tr>
<td>font-src</td>
<td>Defines from where the protected resource can load fonts</td>
</tr>
<tr>
<td>connect-src</td>
<td>Defines which URIs the protected resource can load using script interfaces</td>
</tr>
<tr>
<td>form-action</td>
<td>Defines which URIs can be used as the action of HTML form elements</td>
</tr>
<tr>
<td>sandbox</td>
<td>Specifies an HTML sandbox policy that the user agent applies to the protected resource</td>
</tr>
<tr>
<td>script-nonce</td>
<td>Defines script execution by requiring the presence of the specified nonce on script elements</td>
</tr>
<tr>
<td>plugin-types</td>
<td>Defines the set of plugins that can be invoked by the protected resource by limiting the types of resources that can be embedded</td>
</tr>
<tr>
<td>reflected-xss</td>
<td>Instructs a user agent to activate or deactivate any heuristics used to filter or block reflected cross-site scripting attacks, equivalent to the effects of the non-standard X-XSS-Protection header</td>
</tr>
<tr>
<td>report-uri</td>
<td>Specifies a URI to which the user agent sends reports about policy violation</td>
</tr>
</tbody>
</table>
<blockquote>
<p>For more information, see the <a href="https://w3c.github.io/webappsec/specs/content-security-policy/" target="_blank">W3C CSP Spec</a></p>
</blockquote>
<p><docmeta name="uniqueID" value="ContentSecurityPolicy649437"></docmeta></p>
<docmeta name="displayName" value="Content Security Policy">

</docmeta>