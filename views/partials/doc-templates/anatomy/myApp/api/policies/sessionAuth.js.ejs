<h1 id="myapp-api-policies-sessionauth-js">myApp/api/policies/sessionAuth.js</h1>
<h3 id="purpose" permalink="purpose">Purpose</h3>
<p>This is an example policy file against which all routes are checked before allowing a client access to any part of your app.  By default, it allows everyone to access everything but this can (and probably should) be changed before you switch into production mode.     </p>
<p>In Sails, a policy is simply express middleware that does something to authenticate users before they are allowed to access some part of your app.  For more information on creating policies, you&apos;ll probably want to check our guide on it.</p>
<p><docmeta name="uniqueID" value="sessionAuthjs444151"></docmeta></p>
<docmeta name="displayName" value="sessionAuth.js">

<pre><code data-language="javascript">/**
 * sessionAuth
 *
 * @module      :: Policy
 * @description :: Simple policy to allow any authenticated user
 *                 Assumes that your login action in one of your controllers sets `req.session.authenticated = true;`
 * @docs        :: http://sailsjs.org/#!documentation/policies
 *
 */
module.exports = function(req, res, next) {

  // User is allowed, proceed to the next policy, 
  // or if this is the last policy, the controller
  if (req.session.authenticated) {
    return next();
  }

  // User is not allowed
  // (default res.forbidden() behavior can be overridden in `config/403.js`)
  return res.forbidden(&apos;You are not permitted to perform this action.&apos;);
};
</code></pre><!-- __LANG=%%__ -->
</docmeta>