<h1 id="myapp-config-cors-js">myApp/config/cors.js</h1>
<h3 id="purpose" permalink="purpose">Purpose</h3>
<p>This file defines how your Sails app handles CORS and contains settings for configuring it.</p>
<p>Cross-Origin Resource Sharing is like a more modern version of JSONP. It allows your server/API to successfully respond to requests from client-side JavaScript code running on some other domain (e.g. google.com)</p>
<p>Unlike JSONP, it works with POST, PUT, and DELETE requests</p>
<p>For more information on CORS, check out <a href="http://en.wikipedia.org/wiki/Cross-origin_resource_sharing" target="_blank">this here hyperlink</a>.</p>
<p>This can be changed on a per-route basis by adding a &quot;cors&quot; object to the route configuration like this</p>
<pre><code data-language="javascript">&apos;/get foo&apos;: {
  controller: &apos;foo&apos;,
  action: &apos;bar&apos;,
  cors: {
    origin: &apos;http://foobar.com,https://owlhoot.com&apos; 
  }
 }
</code></pre><!-- __LANG=%%__ -->
<docmeta name="displayName" value="cors.js">

<pre><code data-language="text">/**
 * Cross-Origin Resource Sharing (CORS) Settings
 * (sails.config.cors)
 *
 * CORS is like a more modern version of JSONP-- it allows your server/API
 * to successfully respond to requests from client-side JavaScript code
 * running on some other domain (e.g. google.com)
 * Unlike JSONP, it works with POST, PUT, and DELETE requests
 *
 * For more information on CORS, check out:
 * http://en.wikipedia.org/wiki/Cross-origin_resource_sharing
 *
 * Note that any of these settings (besides &apos;allRoutes&apos;) can be changed on a per-route basis
 * by adding a &quot;cors&quot; object to the route configuration:
 *
 * &apos;/get foo&apos;: {
 *   controller: &apos;foo&apos;,
 *   action: &apos;bar&apos;,
 *   cors: {
 *     origin: &apos;http://foobar.com,https://owlhoot.com&apos;
 *   }
 *  }
 *
 */

module.exports.cors = {

  // Allow CORS on all routes by default?  If not, you must enable CORS on a
  // per-route basis by either adding a &quot;cors&quot; configuration object
  // to the route config, or setting &quot;cors:true&quot; in the route config to
  // use the default settings below.
  allRoutes: false,

  // Which domains which are allowed CORS access?
  // This can be a comma-delimited list of hosts (beginning with http:// or https://)
  // or &quot;*&quot; to allow all domains CORS access.
  origin: &apos;*&apos;,

  // Allow cookies to be shared for CORS requests?
  credentials: true,

  // Which methods should be allowed for CORS requests?  This is only used
  // in response to preflight requests (see article linked above for more info)
  methods: &apos;GET, POST, PUT, DELETE, OPTIONS, HEAD&apos;,

  // Which headers should be allowed for CORS requests?  This is only used
  // in response to preflight requests.
  headers: &apos;content-type&apos;

};
</code></pre><!-- __LANG=%%__ -->
</docmeta>