<h1 id="myapp-tasks-config-jst-js">myApp/tasks/config/jst.js</h1>
<docmeta name="displayName" value="jst.js">

<pre><code data-language="javascript">/**
 * Precompiles Underscore templates to a `.jst` file.
 *
 * ---------------------------------------------------------------
 *
 * (i.e. basically it takes HTML files and turns them into tiny little
 *  javascript functions that you pass data to and return HTML. This can
 *  speed up template rendering on the client, and reduce bandwidth usage.)
 *
 * For usage docs see:
 *         https://github.com/gruntjs/grunt-contrib-jst
 *
 */

module.exports = function(grunt) {

    var templateFilesToInject = [
        &apos;templates/**/*.html&apos;
    ];

    grunt.config.set(&apos;jst&apos;, {
        dev: {

            // To use other sorts of templates, specify a regexp like the example below:
            // options: {
            //   templateSettings: {
            //     interpolate: /\{\{(.+?)\}\}/g
            //   }
            // },

            // Note that the interpolate setting above is simply an example of overwriting lodash&apos;s
            // default interpolation. If you want to parse templates with the default _.template behavior
            // (i.e. using &lt;div&gt;&lt;/div&gt;), there&apos;s no need to overwrite `templateSettings.interpolate`.


            files: {
                // e.g.
                // &apos;relative/path/from/gruntfile/to/compiled/template/destination&apos;  : [&apos;relative/path/to/sourcefiles/**/*.html&apos;]
                &apos;.tmp/public/jst.js&apos;: require(&apos;../pipeline&apos;).templateFilesToInject
            }
        }
    });

    grunt.loadNpmTasks(&apos;grunt-contrib-jst&apos;);
};
</code></pre><!-- __LANG=%%__ -->
</docmeta>