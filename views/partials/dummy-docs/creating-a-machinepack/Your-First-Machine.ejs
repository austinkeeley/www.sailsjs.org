<h1 id="your-first-machine">Your First Machine</h1>
<p>So this <em>Machine</em> will return a <code>Klout Id</code> when it&apos;s given a <code>Twitter Screen name</code> and an <code>API Key</code>.  The generated <code>get-klout-id</code> machine looks like this:</p>
<pre><code data-language="javascript">module.exports = {
  friendlyName: &apos;Get Klout Id&apos;,
  description: &apos;Get the Klout Id from a Twitter screen name.&apos;,
  extendedDescription: &apos;&apos;,
  inputs: {},
  defaultExit: &apos;success&apos;,
  exits: { error: { description: &apos;Unexpected error occurred.&apos; },
    success: { description: &apos;Done.&apos;, example: &apos;TODO&apos; } },
  fn: function (inputs,exits) {
    return exits.success();
  },

};
</code></pre><!-- __LANG=%%__ -->    
<p>First <strong><em>add</em></strong> the <strong>inputs</strong>:</p>
<pre><code data-language="javascript">inputs: {
    twitterScreenName: {
      example: &apos;tuneyards&apos;,
      description: &apos;The Twitter screen name of Klout Id&apos;,
      required: true
    },
    apiKey: {
      example: &apos;ODUfdisauPUdufsoUSF&apos;,
      description: &apos;Your Klout API key.&apos;,
      required: true
    }
  },
</code></pre><!-- __LANG=%%__ -->
<p>Next <strong><em>add</em></strong> the <strong>exits</strong>:</p>
<pre><code data-language="javascript">exits: {
  error: {
    description: &apos;Unexpected error occurred.&apos;
  },
  wrongOrNoKey: {
    description: &apos;Invalid or unprovided API key. All calls must have a key.&apos;
  },
  success: {
    description: &apos;Returns a Klout ID.&apos;,
    example: &apos;234234239472379&apos;
  }
},
</code></pre><!-- __LANG=%%__ -->
<p>Finally, implement the <strong>function</strong>:</p>
<pre><code data-language="javascript">fn: function(inputs, exits) {

    var URL = require(&apos;url&apos;);
    var QS = require(&apos;querystring&apos;);
    var _ = require(&apos;lodash&apos;);
    var Http = require(&apos;machinepack-http&apos;);

    Http.sendHttpRequest({
      baseUrl: &apos;http://api.klout.com/v2/identity.json/twitter?screenName=&apos; + inputs.twitterScreenName + &apos;&amp;key=&apos; + inputs.apiKey,
      url: &apos;&apos;,
      method: &apos;get&apos;,
    }).exec({
      // OK.
      success: function(result) {

        try {
          var responseBody = JSON.parse(result.body);
        } catch (e) {
          return exits.error(&apos;An error occurred while parsing the body.&apos;);
        }

        return exits.success(responseBody.id);

      },
      // Non-2xx status code returned from server
      notOk: function(result) {

        try {
          if (result.status === 403) {
            return exits.wrongOrNoKey(&quot;Invalid or unprovided API key. All calls must have a key.&quot;);
          }
        } catch (e) {
          return exits.error(e);
        }

      },
      // An unexpected error occurred.
      error: function(err) {

        exits.error(err);
      },
    });
  },
</code></pre><!-- __LANG=%%__ -->
<p>Here&apos;s the complete code for the <code>Get Kout Id</code> <em>Machine</em>.</p>
<pre><code data-language="javascript">module.exports = {
  friendlyName: &apos;Get Klout id&apos;,
  description: &apos;Get the Klout Id from a Twitter screen name.&apos;,
  extendedDescription: &apos;&apos;,
  inputs: {
    twitterScreenName: {
      example: &apos;tuneyards&apos;,
      description: &apos;The Twitter screen name of Klout Id&apos;,
      required: true
    },
    apiKey: {
      example: &apos;ODUfdisauPUdufsoUSF&apos;,
      description: &apos;Your Klout API key.&apos;,
      required: true
    }
  },
  defaultExit: &apos;success&apos;,
  exits: {
    error: {
      description: &apos;Unexpected error occurred.&apos;
    },
    wrongOrNoKey: {
      description: &apos;Invalid or unprovided API key. All calls must have a key.&apos;
    },
    success: {
      description: &apos;Returns a Klout ID.&apos;,
      example: &apos;234234239472379&apos;
    }
  },
  fn: function(inputs, exits) {

    var URL = require(&apos;url&apos;);
    var QS = require(&apos;querystring&apos;);
    var _ = require(&apos;lodash&apos;);
    var Http = require(&apos;machinepack-http&apos;);

    Http.sendHttpRequest({
      baseUrl: &apos;http://api.klout.com/v2/identity.json/twitter?screenName=&apos; + inputs.twitterScreenName + &apos;&amp;key=&apos; + inputs.apiKey,
      url: &apos;&apos;,
      method: &apos;get&apos;,
    }).exec({
      // OK.
      success: function(result) {

        try {
          var responseBody = JSON.parse(result.body);
        } catch (e) {
          return exits.error(&apos;An error occurred while parsing the body.&apos;);
        }

        return exits.success(responseBody.id);

      },
      // Non-2xx status code returned from server
      notOk: function(result) {

        try {
          if (result.status === 403) {
            return exits.wrongOrNoKey(&quot;Invalid or unprovided API key. All calls must have a key.&quot;);
          }
        } catch (e) {
          return exits.error(e);
        }

      },
      // An unexpected error occurred.
      error: function(err) {

        exits.error(err);
      },
    });
  },
};
</code></pre><!-- __LANG=%%__ -->
<p>There are two dependencies to install:</p>
<pre><code data-language="javascript">$ npm install lodash --save
$ npm install machinepack-http --save
</code></pre><!-- __LANG=%%__ -->
<h3 id="running-the-get-klout-id-_machine_" permalink="running-the-get-klout-id-machine">Running the <code>Get Klout Id</code> <em>Machine</em></h3>
<p>To execute the <em>Machine</em> <strong>type</strong>:</p>
<pre><code data-language="javascript">$ machinepack exec get-klout-id
</code></pre><!-- __LANG=%%__ -->
<p>You&apos;ll be prompted for a <em>Twitter Screen Name</em> and an <em>API Key</em>.  The <em>machine</em> should display something like this:</p>
<pre><code data-language="javascript">? Please enter the Twitter screen name of Klout Id
twitterScreenName:  irlnathan
? Please enter your Klout API key.
apiKey:  bb8xy34;;dls9facob8ad44
________________________________________________________________&#x2DB;

   Klout.getKloutId()

   &#xBB; twitterScreenName &quot;irlnathan&quot;
   &#xBB; apiKey &quot;bb8xy34;;dls9facob8ad44&quot;

________________________________________________________________&#xB8; 
  | 
  &#x2022; 
  The machine triggered its success exit and returned a value:
   &apos;52917300386935988&apos;


 To run again:
 machinepack exec get-klout-id --twitterScreenName=&apos;irlnathan&apos; --apiKey=&apos;bb8xy34;;dls9facob8ad44&apos;
</code></pre><!-- __LANG=%%__ -->
<blockquote>
<p><strong>Note:</strong> Check out the &quot;To run again:&quot; message, it will save you time :)</p>
</blockquote>
<h3 id="creating-a-second-_machine_-get-klout-score-" permalink="creating-a-second-machine--get-klout-score">Creating a second <em>Machine</em> -- <code>Get Klout Score</code></h3>
<p>The <em>Get Klout Score Machine</em> will share some code with the <em>Get Klout Id Machine</em> so I&apos;ll use the copy command in the <em>Machinepack</em> command-line tools to get started:</p>
<pre><code data-language="javascript">$ machinepack cp get-klout-id get-klout-score
</code></pre><!-- __LANG=%%__ -->
<p>You should see something like this displayed.</p>
<pre><code data-language="javascript">Copied: `get-klout-id` to new machine: `get-klout-score`
</code></pre><!-- __LANG=%%__ -->
<h3 id="implementing-the-get-klout-score-_machine_" permalink="implementing-the-get-klout-score-machine">Implementing the <code>Get Klout Score</code> <em>Machine</em></h3>
<p>So this <em>Machine</em> will return a <code>Klout Score</code> when it&apos;s given a <code>Klout ID</code> and an <code>API Key</code>.  The copied <code>get-klout-score</code> machine looks like this:</p>
<pre><code data-language="javascript">module.exports = {
  friendlyName: &apos;Get Klout id&apos;,
  description: &apos;Get the Klout Id from a Twitter screen name.&apos;,
  extendedDescription: &apos;&apos;,
  inputs: {
    twitterScreenName: {
      example: &apos;tuneyards&apos;,
      description: &apos;The Twitter screen name of Klout Id&apos;,
      required: true
    },
    apiKey: {
      example: &apos;ODUfdisauPUdufsoUSF&apos;,
      description: &apos;Your Klout API key.&apos;,
      required: true
    }
  },
  defaultExit: &apos;success&apos;,
  exits: {
    error: {
      description: &apos;Unexpected error occurred.&apos;
    },
    wrongOrNoKey: {
      description: &apos;Invalid or unprovided API key. All calls must have a key.&apos;
    },
    success: {
      description: &apos;Returns a Klout ID.&apos;,
      example: &apos;234234239472379&apos;
    }
  },
  fn: function(inputs, exits) {

    var URL = require(&apos;url&apos;);
    var QS = require(&apos;querystring&apos;);
    var _ = require(&apos;lodash&apos;);
    var Http = require(&apos;machinepack-http&apos;);

    Http.sendHttpRequest({
      baseUrl: &apos;http://api.klout.com/v2/identity.json/twitter?screenName=&apos; + inputs.twitterScreenName + &apos;&amp;key=&apos; + inputs.apiKey,
      url: &apos;&apos;,
      method: &apos;get&apos;,
    }).exec({
      // OK.
      success: function(result) {

        try {
          var responseBody = JSON.parse(result.body);
        } catch (e) {
          return exits.error(&apos;An error occurred while parsing the body.&apos;);
        }

        return exits.success(responseBody.id);

      },
      // Non-2xx status code returned from server
      notOk: function(result) {

        try {
          if (result.status === 403) {
            return exits.wrongOrNoKey(&quot;Invalid or unprovided API key. All calls must have a key.&quot;);
          }
        } catch (e) {
          return exits.error(e);
        }

      },
      // An unexpected error occurred.
      error: function(err) {

        exits.error(err);
      },
    });
  },
};
</code></pre><!-- __LANG=%%__ -->    
<p>First <strong><em>edit</em></strong> the <code>friendly name</code> and <code>description</code>:</p>
<pre><code data-language="javascript">module.exports = {
  friendlyName: &apos;Get Klout Score&apos;,
  description: &apos;Get the Klout score of a Klout Id.&apos;,
  extendedDescription: &apos;&apos;,
</code></pre><!-- __LANG=%%__ -->
<p>Next, <strong><em>edit</em></strong> the <strong>inputs</strong>.</p>
<blockquote>
<p><strong>Note:</strong> The <code>apiKey</code> <em>input</em> remains the same.</p>
</blockquote>
<pre><code data-language="javascript">inputs: {
    kloutId: {
      example: &apos;32423423432342&apos;,
      description: &apos;A Klout Id.&apos;,
      required: true
    },
    apiKey: {
      example: &apos;ODUfdisauPUdufsoUSF&apos;,
      description: &apos;Your Klout API key.&apos;,
      required: true
    }
  },
</code></pre><!-- __LANG=%%__ -->
<p>Next, <strong><em>edit</em></strong> the <strong>exits</strong>.</p>
<blockquote>
<p><strong>Note:</strong> The <code>wrongOrNoKey</code> exit remains the same.</p>
</blockquote>
<pre><code data-language="javascript">exits: {
    error: {
      description: &apos;Unexpected error occurred.&apos;
    },
    wrongOrNoKey: {
      description: &apos;Invalid or unprovided API key. All calls must have a key.&apos;
    },
    success: {
      description: &apos;Returns the Klout score of a Klout ID.&apos;,
      example: &apos;54.342342332&apos;
    }
  },
</code></pre><!-- __LANG=%%__ -->
<p>Next, <strong><em>edit</em></strong> the <strong>function</strong>.</p>
<pre><code data-language="javascript">fn: function(inputs, exits) {

    var URL = require(&apos;url&apos;);
    var QS = require(&apos;querystring&apos;);
    var _ = require(&apos;lodash&apos;);
    var Http = require(&apos;machinepack-http&apos;);

    Http.sendHttpRequest({
      baseUrl: &apos;http://api.klout.com/v2/user.json/&apos; + inputs.kloutId + &apos;/score?key=&apos; + inputs.apiKey,
      url: &apos;&apos;,
      method: &apos;get&apos;,
    }).exec({
      // OK.
      success: function(result) {

        try {
          var responseBody = JSON.parse(result.body);
        } catch (e) {
          return exits.error(&apos;An error occurred while parsing the body.&apos;);
        }

        return exits.success(responseBody.score);

      },
      // Non-2xx status code returned from server
      notOk: function(result) {

        try {
          if (result.status === 403) {
            return exits.wrongOrNoKey(&quot;Invalid or unprovided API key. All calls must have a key.&quot;);
          }
        } catch (e) {
          return exits.error(e);
        }

        return exits.error(result);

      },
      // An unexpected error occurred.
      error: function(err) {

        exits.error(err);
      },
    });
  },
};
</code></pre><!-- __LANG=%%__ -->
<p>Here&apos;s the complete code for the <code>Get Kout Score</code> <em>Machine</em>.</p>
<pre><code data-language="javascript">module.exports = {
  friendlyName: &apos;Get Klout score&apos;,
  description: &apos;Get the Klout score of a Klout Id.&apos;,
  extendedDescription: &apos;&apos;,
  inputs: {
    kloutId: {
      example: &apos;32423423432342&apos;,
      description: &apos;A Klout Id.&apos;,
      required: true
    },
    apiKey: {
      example: &apos;ODUfdisauPUdufsoUSF&apos;,
      description: &apos;Your Klout API key.&apos;,
      required: true
    }
  },
  defaultExit: &apos;success&apos;,
  exits: {
    error: {
      description: &apos;Unexpected error occurred.&apos;
    },
    wrongOrNoKey: {
      description: &apos;Invalid or unprovided API key. All calls must have a key.&apos;
    },
    success: {
      description: &apos;Returns the Klout score of a Klout ID.&apos;,
      example: &apos;54.342342332&apos;
    }
  },
  fn: function(inputs, exits) {

    var URL = require(&apos;url&apos;);
    var QS = require(&apos;querystring&apos;);
    var _ = require(&apos;lodash&apos;);
    var Http = require(&apos;machinepack-http&apos;);

    Http.sendHttpRequest({
      baseUrl: &apos;http://api.klout.com/v2/user.json/&apos; + inputs.kloutId + &apos;/score?key=&apos; + inputs.apiKey,
      url: &apos;&apos;,
      method: &apos;get&apos;,
    }).exec({
      // OK.
      success: function(result) {

        try {
          var responseBody = JSON.parse(result.body);
        } catch (e) {
          return exits.error(&apos;An error occurred while parsing the body.&apos;);
        }

        return exits.success(responseBody.score);

      },
      // Non-2xx status code returned from server
      notOk: function(result) {

        try {
          if (result.status === 403) {
            return exits.wrongOrNoKey(&quot;Invalid or unprovided API key. All calls must have a key.&quot;);
          }
        } catch (e) {
          return exits.error(e);
        }

        return exits.error(result);

      },
      // An unexpected error occurred.
      error: function(err) {

        exits.error(err);
      },
    });
  },
};
</code></pre><!-- __LANG=%%__ -->
<h3 id="running-the-get-klout-score-_machine_" permalink="running-the-get-klout-score-machine">Running the <code>Get Klout Score</code> <em>Machine</em></h3>
<p>To execute the <em>Machine</em> <strong>type</strong>:</p>
<pre><code data-language="javascript">$ machinepack exec get-klout-score
</code></pre><!-- __LANG=%%__ -->
<p>You&apos;ll be prompted for a <em>Klout Id</em> and an <em>API Key</em>.  The <em>machine</em> should display something like this:</p>
<pre><code data-language="javascript">? Please enter a Klout Id.
kloutId:  52917300386935988
? Please enter your Klout API key.
apiKey:  bb8xy34;;dls9facob8ad44
________________________________________________________________&#x2DB;

   Klout.getKloutScore()

   &#xBB; kloutId &quot;52917300386935988&quot;
   &#xBB; apiKey &quot;bb8xy34;;dls9facob8ad44&quot;

________________________________________________________________&#xB8; 
  | 
  &#x2022; 
  The machine triggered its success exit and returned a value:
   &apos;40.15902258047049&apos;


 To run again:
 machinepack exec get-klout-score --kloutId=&apos;52917300386935988&apos; --apiKey=&apos;bb8xy34;;dls9facob8ad44&apos;
</code></pre><!-- __LANG=%%__ -->
<blockquote>
<p><strong>Note:</strong> Check out the &quot;To run again:&quot; message, it will save you time :)</p>
</blockquote>
